# Rime schema settings
# encoding: utf-8

schema:
  schema_id: sunman
  name: 山人全息码
  version: "2021.08.10"
  author:
    - 发明人 谢振斌
    - 方案制作 ywxt
  description: 山人全息码
    https://github.com/ywxt/rime-sunman
  dependencies:
    - sunman_spelling_pseudo
    - sunman.pua
    - luna_pinyin
    - stroke
    -
__patch:
  - sunman.custom:/patch?
  - symbols:/patch?

switches:
  - options: [utf8, gbk, gb2312, big5]
    reset: 1
    states:
      - UTF-8
      - GBK
      - GB2312
      - BIG5
  - name: ascii_mode
    reset: 0
    states: [中文, 西文]
  - name: full_shape
    states: [半角, 全角]
  - name: ascii_punct
    states: [，。, ，．]
  - name: simplification
    states: [漢字, 汉字]
  - name: traditionalization
    reset: 0
    states: [简体保持, 簡入繁出]
  # - name: extended_charset
  # states: [ 通用, 增廣 ]
  - options:
      - sunman_spelling.off
      - sunman_spelling.lv1
      - sunman_spelling.lv2
      - sunman_spelling.lv3
    states: [〇注解, 一重注解, 二重注解, 三重注解]
    reset: 3
  - name: sunman_postpone_fullcode  # 仅作用于单字。
    reset: 1
    states: [ ＝原始排序, ↓全码后置 ]
  - name: pua_filter
    states: [PUA基本, PUA全集]

engine:
  processors:
    - ascii_composer
    - recognizer
    - lua_processor@sunman_spelling_processor
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@luna_pinyin
    - affix_segmentor@luna_pinyin_lookup
    - affix_segmentor@stroke_lookup
    - affix_segmentor@reverse_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - history_translator@history
    - table_translator@fixed
    - table_translator
    - script_translator@luna_pinyin
    - script_translator@luna_pinyin_lookup
    - table_translator@stroke_lookup
    # - lua_translator@os_env
    # - lua_translator@helper
  filters:
    # - lua_filter@single_char_only
    - charset_filter@gb2312
    - charset_filter@gbk
    - charset_filter@big5
    # - charset_filter@utf8  # 该组件在 librime 1.6.* 以后错误过滤字符，暂时停用
    - simplifier@simplify
    - simplifier@traditionalize
    - reverse_lookup_filter@luna_pinyin_reverse_lookup
    - reverse_lookup_filter@stroke_reverse_lookup
    - lua_filter@sunman_spelling@smsp
    - lua_filter@sunman_spelling@smsp_for_rvlk
    - lua_filter@sunman_postpone_fullcode
    # - lua_filter@lazy_clock
    - lua_filter@sunman_pua_filter
    - lua_filter@sunman_single_char
    - uniquifier
    # - lua_filter@debug_filter

# single_char_only:
#   __include: gb2312

# 防止对 punct 进行过滤
gb2312:
  tags: [abc, reverse_lookup, luna_pinyin_lookup, stroke_lookup]
gbk:
  __include: gb2312
big5:
  __include: gb2312

simplify:
  __include: gb2312
  option_name: simplification
  tips: all

traditionalize:
  __include: gb2312
  opencc_config: s2t.json
  option_name: traditionalization
  tips: all
  comment_format:
    - xform/^/（/
    - xform/$/）/

lua_reverse_db:
  spelling: sunman_spelling_pseudo
  code: sunman

sunman_spelling:
  lua:
    switch_key: "Control+c"
    cycle_key: "Shift+Control+C"
    # 注意写法：Shift 在前，Control 在后。

smsp:
  tags: [abc, punct]

smsp_for_rvlk:
  tags:
    __include: reverse_lookup/extra_tags

    
sunman_single_char:
  tags: [ abc ]

sunman_pua_filter:
  dictionary: sunman.pua

sunman_postpone_fullcode:
  tags: [ abc ]
  lua:
    # max_index: 6  # 最大后置位置，默认为 4

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  delimiter: " `'"
  # auto_select: true
  algebra:
    - xform/^\*// # 特码以星号开头，以便在全码后置脚本中区分，以防识别为全码

fixed:
  __include: translator
  enable_user_dict: false
  enable_sentence: false
  initial_quality: 100000000

translator:
  dictionary: sunman
  prism: sunman
  enable_sentence: true
  enable_user_dict: true
  enable_encoder: true
  encode_commit_history: false # 对连续上屏的词自动成词
  max_phrase_length: 15 # 自动成词的最大词长
  preedit_format:
    - 'xform/^([a-z]*)$/$1\t（\U$1\E）/'
    - "xlit|ABCDEFGHIJKLMNOPQRSTUVWXYZ|住日草月体手财一言金虫行木女口丿心人水地食八火叉衣ㄣ|"

# history:
#   input:
#   size: 1
#   initial_quality: 2000

#用于混输
luna_pinyin:
  tag: luna_pinyin
  dictionary: luna_pinyin
  initial_quality: 0.2

# 拼音混输。不使用 luna_pinyin_lookup，是因为那样做会导致所有常规编码段和常规候
# 选被同时打上 abc 和 luna_pinyin_lookup 标签，从而同时被 smsp 和 smsp_for_rvlk
# 接收，被添加两次注释。
# abc_segmentor:
# extra_tags: [ luna_pinyin ]

reverse_lookup:
  tag: reverse_lookup
  prefix: "`" # 反查引导符「`」
  # suffix:   # 反查关闭符，暂不定义
  tips: 【反查：拼音+笔画】
  closing_tips: 【反查关闭】
  # preedit_format:
  # - xform/([nljqxy])v/$1ü/
  extra_tags:
    - luna_pinyin_lookup
    - stroke_lookup

luna_pinyin_lookup:
  tag: luna_pinyin_lookup
  dictionary: luna_pinyin
  prefix: "`P"
  tips: 【朙月拼音反查】
  closing_tips: 【反查关闭】
  initial_quality: 0.2

stroke_lookup:
  tag: stroke_lookup
  dictionary: stroke
  prefix: "`B"
  tips: 【五笔画反查】
  closing_tips: 【反查关闭】
  initial_quality: 0.5
  preedit_format:
    - 'xform/^([hspnz]+)$/$1\t（\U$1\E）/'
    - xlit/HSPNZ/一丨丿丶乙/

luna_pinyin_reverse_lookup:
  tags: [luna_pinyin, luna_pinyin_lookup]
  dictionary: sunman
  # overwrite_comment: true  # 覆蓋其他提示

stroke_reverse_lookup:
  __include: luna_pinyin_reverse_lookup
  tags: [stroke_lookup]

punctuator:
  import_preset: sunman.symbols

# 本节点仅用于被 __patch 指令引用
key_bindings:
  __append:
    - { when: always, accept: "Control+Shift+F", toggle: traditionalization }
    # - { when: composing, accept: "Control+s", toggle: single_char_only }
    # - { when: composing, accept: "Control+t", toggle: lazy_clock }
    - { when: has_menu, accept: semicolon, send: 2 } # 分号次选
    - { when: has_menu, accept: apostrophe, send: 3 } # 引号三选

key_binder:
  bindings:
    __patch:
      - key_bindings:/emacs_editing?
      - key_bindings:/move_by_word_with_tab?
      - key_bindings:/paging_with_minus_equal?
      - key_bindings:/numbered_mode_switch?
      - key_bindings
      # 方案用户可仿照 key_bindings 节点在 *.custom.yaml 文件中添加按键绑定：
      - sunman.custom:/key_bindings?

recognizer:
  patterns:
    uppercase: "^(?![`;]).*[A-Z][-_+.'0-9A-Za-z]*$"
    reverse_lookup: "^`([a-z]+'?)*$"
    luna_pinyin_lookup: "^`P([a-z]+'?)*$"
    stroke_lookup: "^`B([a-z]+'?)*$"
    punct: '^/([0-9]0?|[A-Za-z]+)$'
    # os_env: '^env/\w+'
    # helper: '^help/$'
